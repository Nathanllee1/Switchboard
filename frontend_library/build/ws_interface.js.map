{
  "version": 3,
  "sources": ["../build/_snowpack/pkg/uuid.js", "../build/sub.js", "../build/ws_interface.js"],
  "sourcesContent": ["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\nvar REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport { v4 };\n", "export class Sub {\n  constructor() {\n    this.cb = () => {\n    };\n  }\n  onMessage(cb) {\n    this.cb = cb;\n  }\n  pushMessage(message) {\n    this.cb(message);\n  }\n}\n", "import {v4 as uuidv4} from \"./_snowpack/pkg/uuid.js\";\nimport {Sub} from \"./sub.js\";\nclass prom_wrapper {\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.reject = reject;\n      this.resolve = resolve;\n    });\n  }\n}\nexport class WS_Interface {\n  constructor(url) {\n    this.gets = {};\n    this.pending_subs = {};\n    this.subs = {};\n    this.url = url;\n  }\n  async initialize() {\n    this.ws_interface = new WebSocket(this.url);\n    this.ws_interface.addEventListener(\"message\", (data) => {\n      this.handle_message(data.data);\n    });\n    return new Promise((resolve, reject) => {\n      this.ws_interface.addEventListener(\"open\", () => {\n        resolve(null);\n      });\n    });\n  }\n  get(path, args = {}) {\n    let request_id = uuidv4();\n    this.ws_interface.send(JSON.stringify({\n      type: \"GET\",\n      body: {\n        path,\n        uuid: request_id,\n        args\n      }\n    }));\n    let prom_obj = new prom_wrapper();\n    this.gets[request_id] = prom_obj;\n    return prom_obj.promise;\n  }\n  handle_message(message2) {\n    const parsed = JSON.parse(message2);\n    switch (parsed.type) {\n      case \"GET\":\n        this.handle_get_return(parsed.body);\n        break;\n      case \"SUBSCRIPTION_STATUS\":\n        this.handle_sub_return(parsed.body);\n        break;\n      case \"SUBSCRIPTION_PUSH\":\n        this.handle_push(parsed.body);\n        break;\n      default:\n        throw `Message type ${parsed.type} not valid`;\n    }\n  }\n  handle_get_return(get_return2) {\n    this.gets[get_return2.uuid].resolve(get_return2.data);\n  }\n  subscribe(sub_name) {\n    if (this.pending_subs[sub_name]) {\n      throw `Subscription ${sub_name} still pending`;\n    }\n    this.ws_interface.send(JSON.stringify({\n      type: \"SUBSCRIPTION\",\n      body: {\n        channel: sub_name\n      }\n    }));\n    let prom_obj = new prom_wrapper();\n    this.pending_subs[sub_name] = prom_obj;\n    return prom_obj.promise;\n  }\n  handle_sub_return(response) {\n    if (response.connected) {\n      const sub = new Sub();\n      this.subs[response.sub] = sub;\n      this.pending_subs[response.sub].resolve(sub);\n      delete this.pending_subs[response.sub];\n    } else {\n      console.error(response.status);\n    }\n  }\n  handle_push(data_meta) {\n    this.subs[data_meta.sub].pushMessage(data_meta.data);\n  }\n}\n"],
  "mappings": "AAGA,GAAI,GACA,EAAQ,GAAI,YAAW,IAC3B,YAAe,CAEb,GAAI,CAAC,GAGH,GAAkB,MAAO,SAAW,aAAe,OAAO,iBAAmB,OAAO,gBAAgB,KAAK,SAAW,MAAO,WAAa,aAAe,MAAO,UAAS,iBAAoB,YAAc,SAAS,gBAAgB,KAAK,UAEnO,CAAC,GACH,KAAM,IAAI,OAAM,4GAIpB,MAAO,GAAgB,GAGzB,GAAI,GAAQ,sHAEZ,WAAkB,EAAM,CACtB,MAAO,OAAO,IAAS,UAAY,EAAM,KAAK,GAQhD,GAAI,GAAY,GAEhB,OAAS,GAAI,EAAG,EAAI,IAAK,EAAE,EACzB,EAAU,KAAM,GAAI,KAAO,SAAS,IAAI,OAAO,IAGjD,WAAmB,EAAK,CACtB,GAAI,GAAS,UAAU,OAAS,GAAK,UAAU,KAAO,OAAY,UAAU,GAAK,EAG7E,EAAQ,GAAU,EAAI,EAAS,IAAM,EAAU,EAAI,EAAS,IAAM,EAAU,EAAI,EAAS,IAAM,EAAU,EAAI,EAAS,IAAM,IAAM,EAAU,EAAI,EAAS,IAAM,EAAU,EAAI,EAAS,IAAM,IAAM,EAAU,EAAI,EAAS,IAAM,EAAU,EAAI,EAAS,IAAM,IAAM,EAAU,EAAI,EAAS,IAAM,EAAU,EAAI,EAAS,IAAM,IAAM,EAAU,EAAI,EAAS,KAAO,EAAU,EAAI,EAAS,KAAO,EAAU,EAAI,EAAS,KAAO,EAAU,EAAI,EAAS,KAAO,EAAU,EAAI,EAAS,KAAO,EAAU,EAAI,EAAS,MAAM,cAMzf,GAAI,CAAC,EAAS,GACZ,KAAM,WAAU,+BAGlB,MAAO,GAGT,WAAY,EAAS,EAAK,EAAQ,CAChC,EAAU,GAAW,GACrB,GAAI,GAAO,EAAQ,QAAW,GAAQ,KAAO,KAK7C,GAHA,EAAK,GAAK,EAAK,GAAK,GAAO,GAC3B,EAAK,GAAK,EAAK,GAAK,GAAO,IAEvB,EAAK,CACP,EAAS,GAAU,EAEnB,OAAS,GAAI,EAAG,EAAI,GAAI,EAAE,EACxB,EAAI,EAAS,GAAK,EAAK,GAGzB,MAAO,GAGT,MAAO,GAAU,GCvEZ,WAAU,CACf,aAAc,CACZ,KAAK,GAAK,IAAM,GAGlB,UAAU,EAAI,CACZ,KAAK,GAAK,EAEZ,YAAY,EAAS,CACnB,KAAK,GAAG,KCPZ,WAAmB,CACjB,aAAc,CACZ,KAAK,QAAU,GAAI,SAAQ,CAAC,EAAS,IAAW,CAC9C,KAAK,OAAS,EACd,KAAK,QAAU,MAId,OAAmB,CACxB,YAAY,EAAK,CACf,KAAK,KAAO,GACZ,KAAK,aAAe,GACpB,KAAK,KAAO,GACZ,KAAK,IAAM,OAEP,aAAa,CACjB,YAAK,aAAe,GAAI,WAAU,KAAK,KACvC,KAAK,aAAa,iBAAiB,UAAW,AAAC,GAAS,CACtD,KAAK,eAAe,EAAK,QAEpB,GAAI,SAAQ,CAAC,EAAS,IAAW,CACtC,KAAK,aAAa,iBAAiB,OAAQ,IAAM,CAC/C,EAAQ,UAId,IAAI,EAAM,EAAO,GAAI,CACnB,GAAI,GAAa,IACjB,KAAK,aAAa,KAAK,KAAK,UAAU,CACpC,KAAM,MACN,KAAM,CACJ,OACA,KAAM,EACN,WAGJ,GAAI,GAAW,GAAI,GACnB,YAAK,KAAK,GAAc,EACjB,EAAS,QAElB,eAAe,EAAU,CACvB,GAAM,GAAS,KAAK,MAAM,GAC1B,OAAQ,EAAO,UACR,MACH,KAAK,kBAAkB,EAAO,MAC9B,UACG,sBACH,KAAK,kBAAkB,EAAO,MAC9B,UACG,oBACH,KAAK,YAAY,EAAO,MACxB,cAEA,KAAM,gBAAgB,EAAO,kBAGnC,kBAAkB,EAAa,CAC7B,KAAK,KAAK,EAAY,MAAM,QAAQ,EAAY,MAElD,UAAU,EAAU,CAClB,GAAI,KAAK,aAAa,GACpB,KAAM,gBAAgB,kBAExB,KAAK,aAAa,KAAK,KAAK,UAAU,CACpC,KAAM,eACN,KAAM,CACJ,QAAS,MAGb,GAAI,GAAW,GAAI,GACnB,YAAK,aAAa,GAAY,EACvB,EAAS,QAElB,kBAAkB,EAAU,CAC1B,GAAI,EAAS,UAAW,CACtB,GAAM,GAAM,GAAI,GAChB,KAAK,KAAK,EAAS,KAAO,EAC1B,KAAK,aAAa,EAAS,KAAK,QAAQ,GACxC,MAAO,MAAK,aAAa,EAAS,SAElC,SAAQ,MAAM,EAAS,QAG3B,YAAY,EAAW,CACrB,KAAK,KAAK,EAAU,KAAK,YAAY,EAAU",
  "names": []
}
